as/in the/dt idea/nn of/in virtualisation/nn of/in compute/vb power/nn ,/punct storage/nn and/cc bandwidth/nn becomes/vbz more/jjr and/cc more/rbr important/jj ,/punct grid/nn computing/nn evolves/vbz and/cc is/vbz applied/vbn to/to a/dt rising/vbg number/nn of/in applications/nns ./punct
the/dt environment/nn for/in decentralized/vbn adaptive/jj services/nns (/punct edas/nns )/punct provides/vbz a/dt grid-like/jj infrastructure/nn for/in user-accessed/jj ,/punct longterm/jj services/nns (/punct e.g/nn ./punct
webserver/nn ,/punct source-code/jj repository/jj etc./nn )/punct ./punct
it/prp aims/vbz at/in supporting/vbg the/dt autonomous/jj execution/nn and/cc evolution/nn of/in services/nns in/in terms/nns of/in scalability/nn and/cc resource-aware/jj distribution/nn ./punct
edas/nns offers/nns flexible/jj service/nn models/nns based/vbn on/in distributed/vbn mobile/jj objects/nns ranging/vbg from/in a/dt traditional/jj clientserver/nn scenario/nn to/to a/dt fully/rb peer-to-peer/jj based/vbn approach/nn ./punct
automatic/nnp ,/punct dynamic/jj resource/nn management/nn allows/vbz optimized/vbn use/nn of/in available/jj resources/nns while/in minimizing/vbg the/dt administrative/jj complexity/nn ./punct
categories/nns and/cc subject/nnp descriptors/nnp c.2.4/nnp [/punct computer/nnp communication/nnp networks/nnp ]/punct :/punct distributed/vbn systems-distributed/jj applications/nns ;/punct d.2.12b/nn [/punct software/nnp ]/punct :/punct software/nnp engineering/nnp interoperability/nnp [/punct distributed/vbd objects/nns ]/punct general/nnp terms/nns design/nn ,/punct management/nn 1/cd ./punct
introduction/nnp infrastructures/nnps for/in grid/nn computing/nn aim/nn at/in virtualizing/vbg a/dt group/nn of/in computers/nns ,/punct servers/nns ,/punct and/cc storage/nn as/in one/cd large/jj computing/nn system/nn ./punct
resource/nnp management/nn is/vbz a/dt key/jj issue/nn in/in such/jj systems/nns ,/punct needed/vbn for/in an/dt efficient/jj and/cc automated/jj distribution/nn of/in tasks/nns on/in the/dt grid/nn ./punct
such/jj grid/nn infrastructures/nns are/vbp often/rb deployed/vbn at/in enterprise/nn level/nn ,/punct but/cc projects/nns like/in seti/nnp @/punct home/nn [/punct 1/cd ]/punct have/vbp demonstrated/vbn the/dt feasibility/nn of/in more/jjr decentralized/vbn grids/nns as/rb well/rb ./punct
current/jj grid/nn computing/nn infrastructures/nns don/vbp ''/'' t/nn provide/vbp sufficient/jj support/nn for/in the/dt execution/nn of/in distributed/vbn ,/punct useraccessed/jj ,/punct long-term/jj services/nns as/in they/prp are/vbp designed/vbn to/to solve/vb compute-/nn or/cc data-intensive/jj tasks/nns with/in a/dt more/rbr or/cc less/rbr fixed/jj set/nn of/in parameters/nns ./punct
the/dt common/jj three-phase/jj approach/nn of/in resource/nn discovery/nn ,/punct system/nn selection/nn and/cc job/nn execution/nn fails/vbz for/in services/nns that/wdt change/vbp their/prp$ resource/nn demand/nn over/in time/nn due/jj to/to interactive/jj user/nn access/nn and/cc run/vb for/in a/dt long/jj period/nn of/in time/nn ./punct
instead/rb an/dt infrastructure/nn for/in long-term/jj services/nns has/vbz to/to place/vb services/nns based/vbn on/in their/prp$ current/jj demand/nn and/cc their/prp$ estimated/vbn future/jj requirements/nns ./punct
if/in the/dt distribution/nn turns/vbz out/rp to/to be/vb wrong/jj (/punct e.g/nn ./punct
a/dt node/nn gets/vbz overloaded/jj )/punct the/dt service/nn has/vbz to/to be/vb migrated/vbn within/in the/dt grid/nn (/punct e.g/nn ./punct
to/to a/dt more/rbr powerful/jj and/cc less/rbr loaded/jj node/nn )/punct ./punct
migration/nn however/rb is/vbz expensive/jj as/in the/dt whole/jj state/nn of/in a/dt service/nn has/vbz to/to be/vb transfered/vbn ./punct
additionally/rb a/dt non-replicated/jj service/nn is/vbz not/rb accessible/jj during/in migration/nn ./punct
therefore/rb the/dt resource/nn management/nn has/vbz to/to avoid/vb migration/nn if/in possible/jj ./punct
furthermore/rb a/dt service/nn concept/nn has/vbz to/to be/vb provided/vbn that/in evades/vbz overload/nn in/in the/dt first/jj place/nn ,/punct and/cc secondly/rb inhibits/vbz service/nn unavailability/nn if/in migration/nn can/md ''/'' t/nn be/vb avoided/vbn ./punct
edas/nns [/punct 2/cd ]/punct aims/nns at/in providing/vbg a/dt grid-like/jj infrastructure/nn for/in user-accessed/jj ,/punct long-term/jj services/nns that/wdt allows/vbz the/dt dynamic/jj adaptation/nn at/in run-time/nn ,/punct provides/vbz a/dt management/nn infrastructure/nn ,/punct and/cc offers/vbz system-level/jj support/nn for/in scalability/nn and/cc fault/nn tolerance/nn ./punct
nodes/nns can/md dynamically/rb join/vb and/cc leave/vb the/dt infrastructure/nn ,/punct and/cc all/dt management/nn tasks/nns ,/punct especially/rb the/dt resource/nn management/nn ,/punct are/vbp decentralized/vbn ./punct
the/dt environment/nn is/vbz built/vbn upon/in our/prp$ aspectix/nn [/punct 3/cd ]/punct middleware/jj infrastructure/nn ,/punct which/wdt directly/rb supports/vbz qos-based/jj ,/punct dynamic/jj reconfiguration/nn of/in services/nns ./punct
the/dt resource/nn management/nn focuses/vbz on/in the/dt execution/nn of/in services/nns that/wdt have/vbp a/dt long/rb ,/punct potentially/rb infinite/jj ,/punct operating/vbg time/nn ./punct
theses/nns services/nns are/vbp organized/vbn in/in projects/nns ./punct
each/dt project/nn has/vbz a/dt distributed/vbn execution/nn scope/nn called/vbd a/dt service/nn environment/nn ./punct
such/pdt an/dt environment/nn possibly/rb spans/vbz multiple/jj institutions/nns ./punct
each/dt institution/nn represents/vbz an/dt administrative/jj domain/nn that/wdt can/md support/vb a/dt project/nn with/in a/dt fixed/vbn set/nn of/in resources/nns ./punct
our/prp$ approach/nn supports/vbz the/dt adaptive/jj resource/nn management/nn of/in all/dt projects/nns in/in scope/nn of/in an/dt institution/nn based/vbn on/in an/dt algorithm/nn inspired/vbn by/in the/dt diffusive/jj algorithms/nns for/in decentralized/vbn loadbalancing/vbg [/punct 4/cd ]/punct ./punct
it/prp is/vbz not/rb known/vbn how/wrb to/to optimally/rb subdivide/vb these/dt resources/nns for/in the/dt services/nns as/in the/dt resource/nn demand/nn of/in services/nns can/md change/vb over/in time/nn or/cc even/rb frequently/rb fluctuate/vbp ./punct
to/to provide/vb resources/nns as/in needed/vbn ,/punct our/prp$ approach/nn automatically/rb rededicates/vbz evenly/rb free/jj or/cc not/rb needed/vbn resources/nns between/in service/nn instances/nns across/in projects/nns and/cc nodes/nns ./punct
the/dt whole/jj process/nn article/nnp 5/cd of/in rededication/nn is/vbz scalable/jj as/in it/prp is/vbz decentralized/vbn and/cc respects/vbz certain/jj limits/nns like/in the/dt physically/rb available/jj resources/nns of/in a/dt node/nn and/cc the/dt amount/nn of/in resources/nns dedicated/vbn to/to a/dt project/nn ./punct
in/in cases/nns where/wrb rededication/nn is/vbz not/rb possible/jj ,/punct the/dt migration/nn of/in the/dt demanding/vbg service/nn is/vbz initiated/vbn ./punct
edas/nns further/rb supports/vbz flexible/jj service/nn models/nns ,/punct including/vbg a/dt fully/rb centralized/vbn client/server/nn structure/nn ,/punct completely/rb peer-topeer/jj based/vbn systems/nns ,/punct and/cc various/jj configurations/nns in/in between/in that/dt allow/vbp a/dt controlled/jj use/nn of/in peer/vb resources/nns based/vbn on/in the/dt fragmented/jj object/nn model/nn [/punct 5/cd ]/punct ./punct
the/dt overall/jj goal/nn is/vbz to/to provide/vb a/dt generic/jj service/nn architecture/nn that/wdt allows/vbz to/to implement/vb the/dt service/nn functionality/nn once/rb ,/punct and/cc then/rb ,/punct ideally/rb ,/punct run/vb this/dt service/nn with/in different/jj service/nn models/nns and/cc adapt/vb it/prp at/in run-time/nn ,/punct thereby/rb scaling/vbg from/in a/dt single/jj user/nn local/jj instance/nn to/to a/dt multidomain-spanning/jj scalable/jj service/nn ./punct
to/to reduce/vb the/dt implementation/nn effort/nn of/in such/jj services/nns a/dt framework/nn has/vbz been/vbn developed/vbn that/in supports/vbz the/dt run-time/jj evolution/nn from/in a/dt traditional/jj client/server/nn scenario/nn to/to an/dt active/jj replicated/vbn server/nn with/in clients/nns interacting/vbg in/in a/dt hybrid/nn peer-to-peer/nn architecture/nn as/in known/vbn from/in napster/nnp ./punct
in/in a/dt longterm-service/jj grid/nn infrastructure/nn ,/punct active/jj replication/nn has/vbz various/jj benefits/nns :/punct replicas/nns can/md join/vb and/cc leave/vb the/dt object/nn group/nn and/cc therefore/rb replicas/nns can/md be/vb migrated/vbn without/in service/nn unavailability/nn ./punct
load/nn of/in non-modifying/jj requests/nns can/md be/vb evenly/rb distributed/vbn across/in the/dt replicas/nns making/vbg overload/nn situations/nns less/rbr likely/jj ./punct
finally/rb a/dt certain/jj amount/nn of/in node/nn crashes/nns can/md be/vb tolerated/vbn ./punct
the/dt following/vbg section/nn describes/vbz the/dt used/vbn features/nns of/in aspectix/nn followed/vbn by/in a/dt brief/jj overview/nn of/in the/dt core/nn components/nns and/cc concepts/nns of/in edas/nns ./punct
section/nn 4/cd explains/vbz the/dt self-managing/jj and/cc rededication/nn concepts/nns of/in distributed/vbn adaptive/jj resource/nn management/nn ./punct
section/nn 5/cd describes/vbz the/dt framework/nn for/in decentralized/vbn adaptive/jj services/nns ./punct
section/nn 6/cd describes/vbz related/jj work/nn and/cc finally/rb section/nn 7/cd concludes/vbz the/dt paper/nn ./punct
2/ls ./punct
basic/jj middleware/nn the/dt edas/nn environment/nn is/vbz based/vbn on/in the/dt aspectix/nn middleware/nn ./punct
at/in its/prp$ core/nn ,/punct it/prp provides/vbz a/dt corba-compliant/jj orb/nn and/cc ,/punct as/in such/jj ,/punct supports/vbz heterogeneous/jj distributed/vbn systems/nns ./punct
furthermore/rb aspectix/nn supports/vbz the/dt fragmented/jj object/nn model/nn [/punct 5/cd ]/punct that/wdt is/vbz used/vbn to/to implement/vb and/cc provide/vb decentralized/jj adaptive/jj services/nns ./punct
in/in the/dt fragmented/jj object/nn model/nn ,/punct the/dt distinction/nn between/in client/nn stubs/nns and/cc the/dt server/nn object/nn is/vbz no/rb longer/rb present/jj (/punct fig/nn ./punct
1/cd )/punct ./punct
from/in an/dt abstract/jj point/nn of/in view/nn ,/punct a/dt fragmented/jj object/nn is/vbz a/dt unit/nn with/in unique/jj identity/nn ,/punct interface/nn ,/punct behavior/nn ,/punct and/cc state/nn ,/punct like/in in/in classic/jj object-oriented/jj design/nn ./punct
the/dt implementation/nn of/in these/dt properties/nns however/rb is/vbz not/rb bound/vbn to/to a/dt specific/jj location/nn ,/punct but/cc may/md be/vb distributed/vbn arbitrarily/rb on/in various/jj fragments/nns ./punct
any/dt client/nn that/wdt wants/vbz to/to access/vb the/dt fragmented/jj object/nn needs/vbz a/dt local/jj fragment/nn ,/punct which/wdt provides/vbz an/dt interface/nn identical/jj to/to that/dt of/in a/dt traditional/jj stub/nn ./punct
however/rb internal/jj distribution/nn and/cc interaction/nn is/vbz not/rb only/rb transparent/jj on/in the/dt outer/jj interface/nn of/in the/dt distributed/vbn object/nn ,/punct but/cc may/md even/rb change/vb dynamically/rb at/in runtime/nn ./punct
this/dt allows/vbz the/dt fragmented/jj object/nn model/nn to/to adapt/vb to/to changing/vbg environment/nn conditions/nns or/cc quality/nn of/in service/nn requirements/nns ./punct
it/prp offers/vbz to/to change/vb the/dt service/nn model/nn on/in demand/nn from/in traditional/jj client-server/nn to/to a/dt peer-to-peer/nn based/vbn approach/nn and/cc all/dt kind/nn of/in intermediate/jj stages/nns by/in migration/nn and/cc exchanging/vbg of/in fragments/nns ./punct
3/ls ./punct
edas/nnp core/nnp components/nnp figure/nnp 1/cd :/punct fragmented/jj object/nn on/in three/cd nodes/nns edas/nnp has/vbz three/cd major/jj components/nns :/punct every/dt node/nn that/wdt actively/rb supports/vbz decentralized/vbn adaptive/jj services/nns provides/vbz a/dt home/nn environment/nn ./punct
the/dt home/nn environment/nn basically/rb manages/vbz resources/nns of/in one/cd or/cc more/jjr nodes/nns belonging/vbg to/to the/dt same/jj administrative/jj domain/nn or/cc institution/nn ./punct
the/dt service/nn environment/nn is/vbz spread/vbn over/in a/dt set/nn of/in domains/nns that/wdt support/vbp a/dt certain/jj project/nn and/cc relies/vbz on/in basic/jj services/nns from/in the/dt corresponding/jj home/nn environments/nns ./punct
the/dt service/nn environment/nn supports/vbz the/dt execution/nn of/in services/nns belonging/vbg to/to the/dt same/jj project/nn ./punct
finally/rb ,/punct the/dt decentralized/vbn adaptive/jj service/nn is/vbz dynamically/rb distributed/vbn within/in the/dt scope/nn of/in an/dt associated/jj service/nn environment/nn ./punct
the/dt home/nn environment/nn has/vbz the/dt role/nn of/in a/dt mediator/nn between/in the/dt nodes/nns of/in an/dt institution/nn and/cc one/cd or/cc more/jjr service/nn environments/nns ,/punct each/dt running/vbg a/dt set/nn of/in services/nns ./punct
fig/nn ./punct
2/cd shows/nns three/cd domains/nns each/dt running/vbg a/dt home/nn environment/nn that/wdt spans/vbz all/dt nodes/nns of/in the/dt respective/jj domains/nns ./punct
every/dt node/nn provides/vbz a/dt set/nn of/in resources/nns ./punct
each/dt domain/nn has/vbz a/dt manager/nn who/wp can/md use/vb that/in home/nn environment/nn to/to assign/vb resources/nns to/to service/nn environments/nns and/cc to/to revoke/vb them/prp ./punct
apart/rb from/in providing/vbg system/nn load/nn and/cc all/dt kinds/nns of/in resource-usage/jj information/nn to/to the/dt service/nn environment/nn ,/punct the/dt home/nn environment/nn also/rb notifies/vbz about/in all/dt important/jj system/nn events/nns like/in a/dt node/nn shutdown/nn or/cc crash/nn ./punct
a/dt service/nn environment/nn represents/vbz a/dt scope/nn of/in distribution/nn for/in one/cd or/cc more/jjr services/nns ./punct
usually/rb ,/punct a/dt service/nn environment/nn is/vbz owned/vbn by/in one/cd organization/nn or/cc community/nn and/cc dedicated/vbn to/to one/cd project/nn ./punct
a/dt service/nn manager/nn can/md start/vb ,/punct stop/vb ,/punct and/cc configure/vb services/nns through/in the/dt interface/nn of/in the/dt service/nn environment/nn and/cc decides/vbz which/wdt resources/nns provided/vbn by/in home/nn environments/nns are/vbp accepted/vbn ./punct
in/in most/jjs cases/nns a/dt service/nn environment/nn is/vbz spread/vbn over/in more/jjr than/in one/cd administrative/jj domain/nn as/in shown/vbn in/in fig/nn ./punct
2/ls ./punct
one/cd of/in the/dt main/jj tasks/nns of/in the/dt service/nn environment/nn is/vbz to/to support/vb the/dt migration/nn of/in services/nns or/cc service/nn components/nns especially/rb between/in different/jj home/nn environments/nns ./punct
the/dt service/nn environment/nn thereby/rb takes/vbz available/jj resources/nns ,/punct the/dt requirements/nns of/in the/dt services/nns ,/punct and/cc the/dt policies/nns provided/vbn by/in the/dt service/nn manager/nn into/in account/nn ./punct
the/dt migration/nn of/in service/nn components/nns can/md be/vb necessary/jj for/in various/jj reasons/nns ,/punct like/in node/nn shutdown/nn ,/punct resource/nn constraints/nns ,/punct and/cc the/dt growth/nn or/cc shrinkage/nn of/in a/dt service/nn environment/nn ./punct
4/ls ./punct
decentralized/jj resourcemanagement/nnp resource/nnp management/nn for/in long-term/jj services/nns has/vbz other/jj requirements/nns than/in resource/nn management/nn in/in common/jj grid/nn computing/nn environments/nns ./punct
for/in instance/nn even/rb in/in the/dt context/nn of/in traditional/jj grid/nn systems/nns it/prp is/vbz very/rb difficult/jj to/to determine/vb or/cc even/rb only/rb estimate/vb the/dt resource/nn requirements/nns of/in a/dt task/nn [/punct 6/cd ]/punct ./punct
for/in long-term/jj services/nns this/dt is/vbz even/rb harder/rbr ,/punct and/cc it/prp is/vbz likely/jj that/in the/dt resource/nn demand/nn frequently/rb changes/vbz ./punct
this/dt turns/vbz article/nnp 5/cd host/nnp fhost/nn d/nn host/nn e/nn host/nn a/nn host/nn c/nnp service/nnp environment/nnp service/nnp b/nnp service/nnp a/nnp home/nnp env/nn ./punct
home/nnp environment/nnp home/nnp environment/nnp boundary/nnp of/in the/dt fragmented/jj object/nn service/nnp manager/nnp domain/nn manager/nnp domain/nn manager/nn figure/nn 2/cd :/punct edas/nnp scenario/nn the/dt optimal/jj distribution/nn of/in services/nns over/in a/dt set/nn of/in nodes/nns into/in a/dt difficult/jj problem/nn ./punct
in/in general/jj the/dt migration/nn of/in services/nns is/vbz a/dt prerequisite/nn of/in edas/nns as/in it/prp offers/vbz a/dt solution/nn if/in the/dt initial/jj distribution/nn decision/nn was/vbd wrong/jj (/punct e.g/nn ./punct
initial/jj start/nn of/in previously/rb unknown/jj service/nn )/punct or/cc the/dt demand/nn of/in services/nns has/vbz changed/vbn substantially/rb ./punct
but/cc migration/nn is/vbz costly/jj ,/punct since/in the/dt whole/jj state/nn of/in a/dt service/nn possibly/rb including/vbg program/nn code/nn has/vbz to/to be/vb transfered/vbn ./punct
if/in the/dt service/nn is/vbz not/rb replicated/vbn it/prp will/md be/vb unavailable/jj during/in migration/nn ./punct
taking/vbg this/dt into/in account/nn a/dt resource/nn management/nn should/md place/vb services/nns and/cc adaptively/rb rededicate/jj resources/nns between/in services/nns and/cc nodes/nns as/in needed/vbn to/to prevent/vb migration/nn ./punct
as/in edas/nns aims/vbz at/in providing/vbg a/dt grid-like/jj infrastructure/nn for/in a/dt large/jj set/nn of/in nodes/nns that/wdt can/md join/vb and/cc leave/vb the/dt system/nn all/dt resource/nn management/nn tasks/nns have/vbp to/to be/vb decentralized/vbn to/to be/vb scalable/jj and/cc should/md not/rb require/vb global/jj knowledge/nn ./punct
the/dt resource/nn management/nn can/md be/vb structured/vbn into/in the/dt following/vbg different/jj tasks/nns :/punct •/cd adding/vbg and/cc changing/vbg the/dt assigned/vbn resources/nns of/in a/dt service/nn environment/nn •/cd automatic/nnp placement/nn of/in service/nn at/in startup/nn time/nn and/cc during/in migration/nn due/jj to/to overload/nn •/cd keeping/vbg all/dt kind/nn of/in resource/nn limits/nns ,/punct especially/rb the/dt limits/nns of/in service/nn environments/nns •/vbp compensate/nn leaving/vbg and/cc crashed/vbd nodes/nns in/in the/dt next/jj sections/nns we/prp will/md describe/vb what/wp kind/nn of/in resource/nn limits/nns there/ex are/vbp and/cc how/wrb to/to do/vb resource/nn management/nn based/vbn on/in these/dt basic/jj conditions/nns ./punct
our/prp$ approach/nn manages/vbz resources/nns on/in two/cd stages/nns ,/punct the/dt node/nn level/nn and/cc the/dt service-environment/nn level/nn ./punct
at/in the/dt node/nn level/nn we/prp monitor/vbp usage/nn of/in all/dt kind/nn of/in physical/jj resources/nns like/in disk/nn space/nn ,/punct memory/nn ,/punct cpu/nnp and/cc network/nn bandwidth/nn but/cc also/rb logical/jj ones/nns like/in open/jj files/nns ,/punct sockets/nns and/cc threads/nns ./punct
the/dt entity/nn of/in decentralized/vbn adaptive/jj service/nn ./punct
every/dt service/nn has/vbz so/rb called/vbn local/jj limits/nns that/wdt restrict/vbp the/dt resource/nn usage/nn in/in context/nn of/in the/dt local/jj limit/nn the/dt home/nn environment/nn tries/vbz to/to extend/vb the/dt limits/nns or/cc notifies/vbz the/dt responsible/jj service/nn environment/nn if/in rededication/nn is/vbz not/rb possible/jj ./punct
reaching/vbg a/dt local/jj limit/nn can/md be/vb caused/vbn service/nn environment/nn ./punct
in/in the/dt first/jj case/nn service/nn migration/nn might/md help/vb ,/punct in/in the/dt second/jj case/nn migration/nn to/to another/dt administrative/jj domain/nn might/md be/vb an/dt option/nn ,/punct or/cc simply/rb reducing/vbg resource/nn demand/nn by/in stopping/vbg the/dt service/nn ./punct
of/in course/nn there/rb could/md be/vb more/jjr than/in one/cd service/nn of/in the/dt same/jj service/nn environment/nn at/in a/dt node/nn ./punct
therefore/rb the/dt assigned/vbn resources/nns of/in a/dt service/nn environment/nn limits/nns of/in its/prp$ services/nns ./punct
furthermore/rb each/dt node/nn has/vbz node/nn limits/nns that/wdt restrict/vbp the/dt overall/jj usage/nn of/in certain/jj resources/nns ./punct
a/dt node/nn limit/nn must/md never/rb exceed/vb the/dt physical/jj resource/nn (/punct e.g/nn ./punct
disk/nn space/nn )/punct of/in a/dt node/nn and/cc might/md be/vb much/rb smaller/jjr ,/punct e.g./fw ,/punct for/in supporting/vbg local/jj users/nns ./punct
the/dt sum/nn of/in all/dt local/jj limits/nns at/in a/dt node/nn must/md never/rb exceed/vb the/dt node/nn limit/nn of/in a/dt resource/nn ./punct
therefore/rb observing/vbg and/cc controlling/vbg the/dt local/jj limits/nns will/md keep/vb the/dt node/nn limits/nns and/cc preventing/vbg overload/nn ./punct
at/in the/dt institution/nn level/nn the/dt resource/nn usage/nn of/in a/dt service/nn environment/nn and/cc its/prp$ associated/jj services/nns is/vbz also/rb restricted/vbn by/in so-called/jj global/jj limits/nns ./punct
these/dt limits/nns determine/vbp the/dt maximum/nn resource/nn usage/nn of/in a/dt project/nn in/in scope/nn of/in a/dt home/nn environment/nn ./punct
the/dt sum/nn of/in all/dt local/jj limits/nns on/in all/dt nodes/nns of/in the/dt institution/nn for/in a/dt certain/jj project/nn therefore/rb never/rb exceeds/vbz its/prp$ global/jj limit/nn ./punct
we/prp start/vbp with/in a/dt straight-forward/jj implementation/nn to/to describe/vb the/dt principal/jj workflow/nn ./punct
then/rb we/prp propose/vbp an/dt approach/nn for/in a/dt more/rbr efficient/jj solution/nn and/cc discuss/vb its/prp$ problems/nns ./punct
environment/nn it/prp is/vbz first/rb necessary/jj to/to identify/vb the/dt nodes/nns that/wdt offer/vbp sufficient/jj unassigned/jj resources/nns to/to start/vb a/dt service/nn ./punct
this/dt can/md approach/vb like/in it/prp is/vbz done/vbn by/in the/dt gnutella/nnp protocol/nn assuming/vbg the/dt nodes/nns are/vbp connected/vbn in/in a/dt random/jj graph/nn ./punct
these/dt resources/nns then/rb can/md be/vb assigned/vbn to/to the/dt service/nn environment/nn of/in the/dt new/jj project/nn which/wdt further/rb on/in can/md start/vb services/nns on/in these/dt nodes/nns ./punct
of/in course/nn a/dt home/nn environment/nn supports/vbz usually/rb numerous/jj projects/nns ./punct
each/dt of/in these/dt projects/nns has/vbz resource/nn shares/nns on/in various/jj nodes/nns ,/punct some/dt of/in them/prp occupied/vbn by/in services/nns ,/punct other/jj free/jj and/cc unused/jj ./punct
possible/jj that/in a/dt service/nn reaches/vbz its/prp$ local/jj limit/nn if/in the/dt service/nn is/vbz under/in high/jj demand/nn ./punct
what/wp happens/vbz next/jj depends/vbz on/in the/dt overall/jj resource/nn usage/nn of/in the/dt service/nn environment/nn and/cc the/dt resource/nn consumption/nn at/in the/dt local/jj node/nn ./punct
if/in the/dt service/nn environment/nn has/vbz not/rb reached/vbn its/prp$ global/jj limit/nn and/cc the/dt node/nn is/vbz not/rb overloaded/vbn the/dt dependent/jj local/jj limit/nn of/in the/dt service/nn should/md be/vb extended/vbn simply/rb by/in reducing/vbg a/dt local/jj limit/nn at/in another/dt node/nn of/in the/dt same/jj service/nn environment/nn ./punct
when/wrb all/dt resources/nns of/in the/dt node/nn are/vbp assigned/vbn to/to other/jj service/nn environments/nns there/ex are/vbp two/cd possibilities/nns ./punct
all/dt resources/nns are/vbp used/vbn by/in services/nns ,/punct so/in we/prp have/vbp to/to migrate/vb a/dt service/nn ,/punct or/cc the/dt resources/nns are/vbp assigned/vbn but/cc not/rb used/vbn ./punct
in/in the/dt later/jj case/nn we/prp shall/md rededicate/vb resources/nns and/cc assign/vb them/prp to/to the/dt demanding/vbg service/nn environment/nn ./punct
finally/rb the/dt service/nn environment/nn might/md have/vb reached/vbn its/prp$ global/jj limit/nn ./punct
in/in this/dt case/nn the/dt resource/nn consumption/nn has/vbz to/to be/vb reduced/vbn either/cc by/in migrating/vbg the/dt service/nn to/to another/dt domain/nn and/cc its/prp$ depended/vbd home/nn environment/nn or/cc simply/rb by/in bounding/vbg resource/nn usage/nn and/cc if/in this/dt is/vbz not/rb possible/jj ,/punct stopping/vbg the/dt service/nn ./punct
which/wdt is/vbz not/rb time/nn critical/jj and/cc a/dt less/jjr frequent/jj task/nn the/dt adaptation/nn of/in local/jj limits/nns occurs/vbz frequently/rb and/cc needs/vbz to/to be/vb done/vbn broadcast/nn searches/nns for/in rededication/nn ./punct
instead/rb a/dt more/rbr efficient/jj approach/nn with/in a/dt bounded/vbn complexity/nn is/vbz necessary/jj ./punct
the/dt same/jj environment/nn ./punct
using/vbg a/dt diffusive/jj algorithm/nn like/in it/prp is/vbz used/vbn for/in decentralized/vbn load/nn balancing/nn ./punct
thereby/rb all/dt nodes/nns of/in a/dt system/nn are/vbp partitioned/vbn in/in groups/nns that/wdt overlap/vbp partially/rb ./punct
the/dt union/nn of/in all/dt groups/nns achieves/vbz a/dt full/jj coverage/nn ./punct
group/nnp members/nns frequently/rb exchange/vbp load/nn information/nn and/cc balance/nn the/dt load/nn by/in migration/nn ./punct
in/in our/prp$ case/nn we/prp aim/vbp not/rb at/in balancing/vbg the/dt load/nn but/cc the/dt amount/nn of/in available/jj free/jj resources/nns of/in a/dt service/nn environment/nn ./punct
each/dt node/nn that/wdt supports/vbz a/dt certain/jj service/nn environment/nn is/vbz at/in least/jjs connected/vbn to/to another/dt node/nn that/wdt supports/vbz the/dt same/jj environment/nn has/vbz still/rb enough/jj resources/nns and/cc therefore/rb if/in a/dt service/nn can/md grow/vb ./punct
there/ex still/rb remain/vbp open/jj issues/nns like/in if/in the/dt diffusively/jj balanced/jj free/jj resources/nns should/md be/vb tightly/rb connected/vbn to/to the/dt real/jj resources/nns ,/punct comparable/jj to/to reservations/nns ./punct
in/in this/dt case/nn there/rb might/md be/vb problems/nns if/in a/dt node/nn supports/vbz several/jj service/nn environments/nns which/wdt all/dt have/vbp services/nns running/vbg at/in the/dt node/nn and/cc a/dt node/nn limit/nn is/vbz exceeded/vbn which/wdt would/md require/vb service/nn not/rb use/vb all/pdt the/dt assigned/vbn resources/nns but/cc the/dt diffusive/jj algorithm/nn caused/vbd the/dt limit/nn overrun/vbn by/in equally/rb balancing/vbg the/dt free/jj resources/nns of/in all/dt supported/vbn service/nn environments/nns ./punct
if/in we/prp remove/vbp the/dt mapping/nn between/in free/jj resources/nns and/cc real/jj resources/nns of/in a/dt node/nn we/prp can/md evade/vb these/dt situations/nns ./punct
however/rb it/prp gets/vbz more/rbr complicated/jj to/to determine/vb the/dt free/jj and/cc unassigned/jj resources/nns of/in a/dt home/nn environment/nn ./punct